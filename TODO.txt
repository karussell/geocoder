* use only boundary from admin_level=city|town|village|hamlet
* check is_in tag
* check bounds and center (correctness, also if lat,lon order is correct while feeding)

# set city/village of every street!
    for(v : get(all villages)) {
       for(s : get(streets and pois with no address in v.adminBounds) {
          updateStreet(s+=v.address)
       }
    }
  title: Bahnhofstraße
  48.0709405, 11.6562796 -> Bahnhofstraße Lenting Germany
  vs. 49.5774614,10.6025237 ->Bahnhofstraße Neustadt a.d.Aisch Germany

# do suggestions!
  http://www.elasticsearch.org/guide/reference/api/search/completion-suggest/
    https://github.com/elasticsearch/elasticsearch/issues/3522
    https://github.com/elasticsearch/elasticsearch/issues/3465
    https://github.com/elasticsearch/elasticsearch/issues/3442
# TODO tags object needs mapping
# create integration test for bavaria
  one entity:    
    bay -> bayern + bayreuth
    nuremberg und Munich und Bavaria
    algäu -> Allgäu    
    Fuerth und Fürt und Fuert
    roter main -> should get some street not the river
    Bahnhofstraße Bayreuth => will be resolved into bindlach
    Postbauer heng
    Lauf Pegnitz 
    Kufsteinerstraße/Alpenweg
    Hof/Töpen
    fuzzy: grevenberg -> gräfenberg
  two entities
    Bahnhofstraße Bayreuth -> not Bindlach!    
    Hasloh Hagenkampsweg => nothing found although it found hasloh
    does often not work when no comma before zipcodes. e.g.: ABC Strasse 19, 20354 Hamburg
    fuzzy: bayreuth grafenreutherstrasse ->bayreuth gravenreutherstrasse 
    steinbank neudorf/spree -> not "steinbank neudorf
  poi
    Jugendherberge/LIMARE
    Bahnhof Bayreuth

* include wikipedia somehow http://productforums.google.com/forum/m/#!topic/maps/toaewYdz0kg
   http://wikimapia.org, http://retred.org/, http://www.wikivoyage.org/
* boost streets (e.g. not bus_stop)
* should we de-duplicate? and how?
* street additionally has array of housenumber+locations, and higher_level_population
* how to associate street to city? or is it already done?
* try querying ala "user input*"
  try feeding for for germany, europe, ww
  integrate into graphhopper enterprise -> /geocoder?input=blup&autocomplete=true&reverse=false
      edge-ngrams and match prefix queries
        http://www.elasticsearch.org/guide/reference/query-dsl/prefix-query/
        http://www.elasticsearch.org/guide/reference/query-dsl/match-query/
        http://www.elasticsearch.org/guide/reference/index-modules/analysis/edgengram-tokenizer/

      via fuzzy search
        http://www.elasticsearch.org/guide/reference/query-dsl/fuzzy-query/
      
      via facets -> ElasticTweetSearch.getQueryChoices -> context dependent autocomplete!
            split the query into “completed” terms and one “to do” term. E.g. if you enter “michael jack”. Then michael is complete (ends with space) and jack should be completed. set the query term of the old query to michael and add the facet.prefix=jack            

  prefer bigger cities
  check if simple city queries work
  see nominatim issues and http://klauszanders.de/blog/2012/10/15/how-to-start-your-own-geocoder-in-48-hours/
  autocomplete
    http://www.devbridge.com/projects/autocomplete/jquery/#how-to-use
        https://github.com/devbridge/jQuery-Autocomplete
        http://designshack.net/articles/javascript/create-a-simple-autocomplete-with-html5-jquery/
    https://github.com/dyve/jquery-autocomplete
    http://jqueryui.com/autocomplete/

 * fixing "failed to add" messages
 * problem if several threads/processes are using SortingWriter -> this should include a random or unique number
   File file = new File(tempDir, "bucket-" + bucketNr + ".gz");   

Nominatim issues: 
 * rio grande -> fluss vs. stadt!
 * Bahnhofstraße Bayreuth => will be resolved into bindlach
 * finds "steinbank neudorf/spree" but not "steinbank neudorf"
 * Hasloh Hagenkampsweg => nothing found although it found hasloh
 * does often not work when no comma before zipcodes. e.g.: ABC Strasse 19, 20354 Hamburg
 * dyon -> dijon france
 * bayreuth grafenreutherstrasse ->bayreuth gravenreutherstrasse 
